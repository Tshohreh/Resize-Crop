# -*- coding: utf-8 -*-
"""Resize_Reshape_Crop_PAD.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KJmOAsb3LJ4uAmMpRNOehmbX6M9fgO6g
"""

#pip install nilearn

import numpy as np
import nibabel as nib
import matplotlib.pyplot as plt
from nilearn.image import resample_img
from scipy import ndimage
from google.colab import drive
drive.mount('/content/drive', force_remount=True)

# Load the NIfTI image
nifti_output_path_1 = "/content/drive/My Drive/Datasets/nifti/S_37_T1.nii.gz"
nifti_img = nib.load(nifti_output_path_1)

# Get the data array from the NIfTI image
data = nifti_img.get_fdata()

# Choose a slice to display (e.g., the middle slice along the z-axis)
slice_index = data.shape[-1] // 2

# Plot the slice
plt.imshow(data[:, :, slice_index], cmap='gray')
plt.axis('off')
plt.title('NIfTI Image')
plt.show()

nifti_img.shape

"""# ***Resize***"""

def resize_nifti(data,nifti_img, new_shape):
    # Resize the data array
    resized_data = ndimage.zoom(data, new_shape / np.array(data.shape))

    # Create a new NIfTI image with the resized data
    new_nii_img = nib.Nifti1Image(resized_data, nifti_img.affine)

    return new_nii_img

# Get new_shape from the user
def get_new_shape_from_user():
    shape_str = input("Enter the desired shape (comma-separated, e.g., 128,128,64): ")
    new_shape = tuple(map(int, shape_str.split(',')))
    return new_shape


#output_nifti_file = "resized_output.nii.gz"
new_shape = get_new_shape_from_user()  # Get new_shape from user

resized_nifti = resize_nifti(data ,nifti_img , new_shape)
#nib.save(resized_nifti, output_nifti_file)
# Get the data array from the NIfTI image
data1 = resized_nifti.get_fdata()

# Choose a slice to display (e.g., the middle slice along the z-axis)
slice_index = data1.shape[-1] // 2

# Plot the slice
plt.imshow(data1[:, :, slice_index], cmap='gray')
plt.axis('off')
plt.title('Resized NIfTI Image')
plt.show()

def crop_nifti(data, nifti_img, crop_slices):

    # Crop the data array
    cropped_data = data[crop_slices[0]:crop_slices[1], crop_slices[2]:crop_slices[3], crop_slices[4]:crop_slices[5]]

    # Create a new NIfTI image with the cropped data
    new_affine = nifti_img.affine  # Affine matrix remains the same
    new_nii_img = nib.Nifti1Image(cropped_data, new_affine)

    return new_nii_img

#output_nifti_file = "cropped_output.nii.gz"

# Define crop slices (start and end indices for each dimension)
# Get new_shape from the user
def get_new_crop_slices_from_user():
    shape_str = input("Enter the desired shape (comma-separated, e.g., 10,112,10,114,0,137): ")
    crop_slices = tuple(map(int, shape_str.split(',')))
    return crop_slices
#crop_slices = (200, 512, 200, 512, 50, 137)  # Example cropping region: (start_x, end_x, start_y, end_y, start_z, end_z)
crop_slices = get_new_crop_slices_from_user()
cropped_nifti = crop_nifti(data1, resized_nifti, crop_slices)

# Plot the cropped image
cropped_data = cropped_nifti.get_fdata()
plt.imshow(cropped_data[:, :, cropped_data.shape[2] // 2], cmap='gray')
plt.title('Cropped NIfTI Image')
plt.axis('off')
plt.show()